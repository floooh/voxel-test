//------------------------------------------------------------------------------
//  shaders.shd
//  Draw voxel meshes generated by stb_voxel_render
//------------------------------------------------------------------------------

@uniform_block vsParams VSParams
@uniform mat4 mvp ModelViewProjection
@uniform mat4 model Model
@uniform vec4[6] normal_table NormalTable
@uniform vec3 light_dir LightDir
@uniform vec3 scale Scale
@uniform vec3 translate Translate
@uniform vec3 tex_translate TexTranslate
@end

//------------------------------------------------------------------------------
@vs vs
@use_uniform_block vsParams
@in vec4 position
@in vec4 normal
@out vec4 facedata
@out vec3 voxelspace_pos
@out vec3 color
@out float amb_occ
    facedata.xyz = normal.xyz / 255.0;
    facedata.w = normal.w;

    vec3 offset;
    offset.x = position.x;
    offset.y = position.y;
    offset.z = position.z;
    amb_occ  = position.w;

    voxelspace_pos = offset * scale;
    vec4 p = vec4(voxelspace_pos + translate, 1.0);

    int normal_index = int(mod(normal.w / 4.0, 6.0));
    vec3 face_normal = mul(model, normal_table[normal_index]).xyz;
    float l = clamp(dot(face_normal, light_dir), 0.0, 1.0) + 0.25;
    color = facedata.xyz * l;

    _position = mul(mvp, p);
@end

//------------------------------------------------------------------------------
@fs fs
@in vec4 facedata
@in vec3 voxelspace_pos
@in vec3 color
@in float amb_occ
    _color = vec4(color, 1.0);
@end

//------------------------------------------------------------------------------
@bundle Voxel
@program vs fs
@end
